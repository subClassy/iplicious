{"version":3,"sources":["Stats/venueStats.js","Components/VenueStats.js"],"names":["homeWinsRatio","venue","a","homeWins","Map","set","associatedTeams","getVenueString","i","matches","length","match","includes","Venue_Name","push","Team_Name_Id","currentTotal","Match_Winner_Id","get","Opponent_Team_Id","IS_Result","filter","item","ar","indexOf","teamNames","teams","team","Team_Id","Team_Short_Code","join","battingFirstWinsRatio","battingFirst","Toss_Winner_Id","Toss_Decision","overProgression","oversMap_battingFirst","oversMap_battingSecond","jStarting","balls","ball","j","Match_Id","Team_Batting_Id","Team_Bowling_Id","has","Over_Id","Batsman_Scored","Extra_Runs","OverProgressionChart","lazy","InningsWinRatio","HomeWinRatio","venueOptions","getVenues","map","value","label","VenueStats","state","homeAdvantageFilter","batFirstAdvantageFilter","overProgFilter","homeAdvantageStats","batFirstAdvantageStats","overProgStats","onHomeAdvantageFilterChange","setState","then","val","onBatFirstAdvantageFilterChange","onOverProgFilterChange","inputValue","path","console","log","toLowerCase","some","option","this","className","options","onChange","defaultValue","showSearch","fallback","React","Component"],"mappings":"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","file":"static/js/13.39b3b0da.chunk.js","sourcesContent":["import matches from \"./data/matches.json\";\nimport teams from \"./data/teams.json\";\nimport balls from \"./data/balls.json\";\nimport { getVenueString } from \"./commonStats\";\n\nasync function homeWinsRatio(venue) {\n  let homeWins = new Map();\n  homeWins.set(\"Wins\", 0);\n  homeWins.set(\"Loses\", 0);\n  homeWins.set(\"No Result\", 0);\n\n  let associatedTeams = [];\n  if (venue === \"all\") {\n    venue = getVenueString();\n  }\n\n  for (let i = 0; i < matches.length; i++) {\n    const match = matches[i];\n    if (venue.includes(match.Venue_Name)) {\n      associatedTeams.push(match.Team_Name_Id);\n\n      let currentTotal = 0;\n      if (match.Team_Name_Id === match.Match_Winner_Id) {\n        currentTotal = homeWins.get(\"Wins\") + 1;\n        homeWins.set(\"Wins\", currentTotal);\n      } else if (match.Opponent_Team_Id === match.Match_Winner_Id) {\n        currentTotal = homeWins.get(\"Loses\") + 1;\n        homeWins.set(\"Loses\", currentTotal);\n      } else if (match.IS_Result === 0) {\n        currentTotal = homeWins.get(\"No Result\") + 1;\n        homeWins.set(\"No Result\", currentTotal);\n      }\n    }\n  }\n  associatedTeams = associatedTeams.filter(\n    (item, i, ar) => ar.indexOf(item) === i\n  );\n\n  if (associatedTeams.length <= 6) {\n    const teamNames = [];\n    for (let i = 0; i < teams.length; i++) {\n      const team = teams[i];\n      if (associatedTeams.indexOf(team.Team_Id) !== -1) {\n        teamNames.push(team.Team_Short_Code);\n      }\n    }\n    homeWins.set(\"Home Team\", teamNames.join(\" / \"));\n  } else {\n    homeWins.set(\"Home Team\", \"Multiple Teams\");\n  }\n\n  return homeWins;\n}\n\nasync function battingFirstWinsRatio(venue) {\n  let battingFirst = new Map();\n  battingFirst.set(\"Wins\", 0);\n  battingFirst.set(\"Loses\", 0);\n  battingFirst.set(\"No Result\", 0);\n\n  let associatedTeams = [];\n  if (venue === \"all\") {\n    venue = getVenueString();\n  }\n\n  for (let i = 0; i < matches.length; i++) {\n    const match = matches[i];\n    if (venue.includes(match.Venue_Name)) {\n      associatedTeams.push(match.Team_Name_Id);\n\n      let currentTotal = 0;\n      if (match.IS_Result === 0) {\n        currentTotal = battingFirst.get(\"No Result\") + 1;\n        battingFirst.set(\"No Result\", currentTotal);\n      } else if (\n        (match.Toss_Winner_Id === match.Match_Winner_Id &&\n          match.Toss_Decision === \"bat\") ||\n        (match.Toss_Winner_Id !== match.Match_Winner_Id &&\n          match.Toss_Decision === \"field\")\n      ) {\n        currentTotal = battingFirst.get(\"Wins\") + 1;\n        battingFirst.set(\"Wins\", currentTotal);\n      } else {\n        currentTotal = battingFirst.get(\"Loses\") + 1;\n        battingFirst.set(\"Loses\", currentTotal);\n      }\n    }\n  }\n\n  return battingFirst;\n}\n\nasync function overProgression(venue) {\n  let oversMap_battingFirst = new Map();\n  let oversMap_battingSecond = new Map();\n  if (venue === \"all\") {\n    venue = getVenueString();\n  }\n\n  let jStarting = 0;\n  for (let i = 0; i < balls.length; i++) {\n    const ball = balls[i];\n    for (let j = jStarting; j < matches.length; j++) {\n      const match = matches[j];\n      if (\n        ball.Match_Id === match.Match_Id &&\n        venue.includes(match.Venue_Name)\n      ) {\n        jStarting = j;\n        if (\n          (match.Toss_Decision === \"bat\" &&\n            match.Toss_Winner_Id === ball.Team_Batting_Id) ||\n          (match.Toss_Decision === \"field\" &&\n            match.Toss_Winner_Id === ball.Team_Bowling_Id)\n        ) {\n          let currentTotal = 0;\n          if (oversMap_battingFirst.has(ball.Over_Id)) {\n            currentTotal = oversMap_battingFirst.get(ball.Over_Id);\n          }\n          if (typeof ball.Batsman_Scored === \"number\") {\n            currentTotal += ball.Batsman_Scored;\n          }\n          if (typeof ball.Extra_Runs === \"number\") {\n            currentTotal += ball.Extra_Runs;\n          }\n          oversMap_battingFirst.set(ball.Over_Id, currentTotal);\n        } else {\n          let currentTotal = 0;\n          if (oversMap_battingSecond.has(ball.Over_Id)) {\n            currentTotal = oversMap_battingSecond.get(ball.Over_Id);\n          }\n          if (typeof ball.Batsman_Scored === \"number\") {\n            currentTotal += ball.Batsman_Scored;\n          }\n          if (typeof ball.Extra_Runs === \"number\") {\n            currentTotal += ball.Extra_Runs;\n          }\n          oversMap_battingSecond.set(ball.Over_Id, currentTotal);\n        }\n      }\n    }\n  }\n\n  return [oversMap_battingFirst, oversMap_battingSecond];\n}\n\nexport { homeWinsRatio, battingFirstWinsRatio, overProgression };\n","import React, { lazy, Suspense } from \"react\";\nimport { Divider, Cascader } from \"antd\";\nimport { getVenues } from \"../Stats/commonStats\";\nimport {\n  homeWinsRatio,\n  battingFirstWinsRatio,\n  overProgression,\n} from \"../Stats/venueStats\";\nimport \"../App.scss\";\n\nconst OverProgressionChart = lazy(() =>\n  import(\"./VenuePresentationComponents/OverProgressionChart\")\n);\nconst InningsWinRatio = lazy(() =>\n  import(\"./VenuePresentationComponents/InningsWinRatio\")\n);\nconst HomeWinRatio = lazy(() =>\n  import(\"./VenuePresentationComponents/HomeWinRatio\")\n);\n\nlet venueOptions = getVenues().map((venue) => {\n  const obj = { value: venue, label: venue };\n  return obj;\n});\n\nvenueOptions.push({ value: \"all\", label: \"All\" });\n\nclass VenueStats extends React.Component {\n  state = {\n    venueOptions: venueOptions,\n    homeAdvantageFilter: \"all\",\n    batFirstAdvantageFilter: \"all\",\n    overProgFilter: \"all\",\n    homeAdvantageStats: [],\n    batFirstAdvantageStats: [],\n    overProgStats: [],\n  };\n\n  onHomeAdvantageFilterChange = (value) => {\n    if (value.length === 0) {\n      value.push(\"all\");\n    }\n    this.setState({ homeAdvantageFilter: value[0] }, () => {\n      const homeAdvantage = homeWinsRatio(this.state.homeAdvantageFilter);\n      homeAdvantage.then((val) => {\n        this.setState({\n          homeAdvantageStats: val,\n        });\n      });\n    });\n  };\n\n  onBatFirstAdvantageFilterChange = (value) => {\n    if (value.length === 0) {\n      value.push(\"all\");\n    }\n    this.setState({ batFirstAdvantageFilter: value[0] }, () => {\n      const batFirstAdvantage = battingFirstWinsRatio(\n        this.state.batFirstAdvantageFilter\n      );\n      batFirstAdvantage.then((val) => {\n        this.setState({\n          batFirstAdvantageStats: val,\n        });\n      });\n    });\n  };\n\n  onOverProgFilterChange = (value) => {\n    if (value.length === 0) {\n      value.push(\"all\");\n    }\n    this.setState({ overProgFilter: value[0] }, () => {\n      const overProgressionStats = overProgression(this.state.overProgFilter);\n      overProgressionStats.then((val) => {\n        this.setState({\n          overProgStats: val,\n        });\n      });\n    });\n  };\n\n  filter = (inputValue, path) => {\n    console.log(inputValue.toLowerCase());\n    return path.some(\n      (option) =>\n        option.label.toLowerCase().indexOf(inputValue.toLowerCase()) > -1\n    );\n  };\n\n  async componentDidMount() {\n    const homeAdvantageStats = await homeWinsRatio(\n      this.state.homeAdvantageFilter\n    );\n    this.setState({\n      homeAdvantageStats,\n    });\n    const batFirstAdvantageStats = await battingFirstWinsRatio(\n      this.state.batFirstAdvantageFilter\n    );\n    this.setState({\n      batFirstAdvantageStats,\n    });\n    const overProgStats = await overProgression(this.state.overProgFilter);\n    this.setState({\n      overProgStats,\n    });\n  }\n\n  render() {\n    overProgression(\"all\");\n    return (\n      <div>\n        <h2 className=\"stat-heading\">Venue Stats</h2>\n        <Divider />\n        <div className=\"stat-subdiv\">\n          <div className=\"heading\">\n            <h2 className=\"stat-subheading\">Home Advantage</h2>\n            <div className=\"filter\">\n              <label>Filter: </label>\n              <Cascader\n                options={this.state.venueOptions}\n                onChange={this.onHomeAdvantageFilterChange}\n                defaultValue={[\"all\"]}\n                showSearch={this.filter}\n              />\n            </div>\n          </div>\n          <Suspense fallback={<div>Loading...</div>}>\n            <div className=\"stats-container highestRunGetter-stat\">\n              <HomeWinRatio\n                homeAdvantageStats={this.state.homeAdvantageStats}\n              />\n            </div>\n          </Suspense>\n          <Divider />\n        </div>\n        <div className=\"stat-subdiv\">\n          <div className=\"heading\">\n            <h2 className=\"stat-subheading\">To Chase or Not to Chase</h2>\n            <div className=\"filter\">\n              <label>Filter: </label>\n              <Cascader\n                options={this.state.venueOptions}\n                onChange={this.onBatFirstAdvantageFilterChange}\n                defaultValue={[\"all\"]}\n                showSearch={this.filter}\n              />\n            </div>\n          </div>\n          <Suspense fallback={<div>Loading...</div>}>\n            <div className=\"stats-container \">\n              <InningsWinRatio\n                batFirstAdvantageStats={this.state.batFirstAdvantageStats}\n              />\n            </div>\n          </Suspense>\n          <Divider />\n        </div>\n        <div className=\"stat-subdiv\">\n          <div className=\"heading\">\n            <h2 className=\"stat-subheading\">When can I score?</h2>\n            <div className=\"filter\">\n              <label>Filter: </label>\n              <Cascader\n                options={this.state.venueOptions}\n                onChange={this.onOverProgFilterChange}\n                defaultValue={[\"all\"]}\n                showSearch={this.filter}\n              />\n            </div>\n          </div>\n          <Suspense fallback={<div>Loading...</div>}>\n            <div className=\"stats-container\">\n              <OverProgressionChart\n                overProgression={this.state.overProgStats}\n              />\n            </div>\n          </Suspense>\n          <Divider />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default VenueStats;\n"],"sourceRoot":""}