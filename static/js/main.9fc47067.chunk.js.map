{"version":3,"sources":["Icons/bat-icon.svg","Icons/bowl-icon.svg","Icons/venue-icon.svg","App.js","serviceWorker.js","index.js"],"names":["SvgBatIcon","props","width","height","viewBox","d","SvgBowlIcon","SvgVenueIcon","BattingStats","lazy","BowlingStats","VenueStats","Content","Layout","Sider","windowWidth","window","innerWidth","App","state","collapsed","tab","onCollapse","setState","onTabChange","event","key","this","className","collapsible","src","process","alt","defaultSelectedKeys","mode","onClick","Item","icon","Icon","component","BatIcon","BowlIcon","VenueIcon","fallback","React","Component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9fc47067.chunk.js","sourcesContent":["import React from \"react\";\n\nconst SvgBatIcon = props => <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 45.22 45\" {...props}><path d=\"M36.83.09a2.84 2.84 0 00-1.42 0 4.13 4.13 0 00-1.55 1.06C26.26 8.75 18.67 16.39 11 24c-1 1.05-1 1.75 0 2.79 2.36 2.41 4.77 4.77 7.15 7.2 1.42 1.41 1.91 1.41 3.37-.05 7.39-7.43 14.84-14.79 22.18-22.22a5.43 5.43 0 001.41-1.91 2.85 2.85 0 000-1.42 10.28 10.28 0 00-8.28-8.3zM2.3 44.84a1.19 1.19 0 001.1 0 8.51 8.51 0 001.07-.8c2.57-2.45 5.11-4.83 7.64-7.33 1.2-1.21 2.4-2.17 4.08-2-1.86-1.79-3.73-3.71-5.59-5.61a4.27 4.27 0 01-1.2 3.28c-3 3-7.55 7.39-9.16 9.11a1.36 1.36 0 00-.09 1.41 4.29 4.29 0 002.15 1.94z\" /></svg>;\n\nexport default SvgBatIcon;","import React from \"react\";\n\nconst SvgBowlIcon = props => <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 44.28 45\" {...props}><path d=\"M6.52 38.65c6.92 6.91 20.19 9.48 28.33 1C16.56 38.65 4.18 23.26 8 5.2-2.29 14.45-2.51 29.62 6.52 38.65z\" /><path d=\"M43.66 27.72a22.31 22.31 0 00-5.47-20.4C31.06-.49 21.13-.27 18.46.18c-7.81 1.45-8.59 5-7.59 13.05C12.1 22.7 22 33.63 31.28 35.53c8.03 1.67 10.48-1.34 12.38-7.81z\" /></svg>;\n\nexport default SvgBowlIcon;","import React from \"react\";\n\nconst SvgVenueIcon = props => <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 69 45\" {...props}><path d=\"M10.48 0A1.51 1.51 0 009 1.53a1.5 1.5 0 103 0A1.52 1.52 0 0010.48 0zm48 0A1.51 1.51 0 0057 1.53a1.5 1.5 0 103 0A1.52 1.52 0 0058.48 0zM6.73 1.53a1.53 1.53 0 101.5 1.52 1.51 1.51 0 00-1.5-1.52zm55.5 0a1.53 1.53 0 101.5 1.52 1.51 1.51 0 00-1.5-1.52zm-27.73 1a95.32 95.32 0 00-24.12 2.69C4.14 6.93 0 9.37 0 12.2c1.55 7 3.51 14.44 5.25 21.53a.77.77 0 00.4.5 68.13 68.13 0 0018.23 6l.87 4.15a.77.77 0 00.73.62H45a.78.78 0 00.72-.62l.9-4.38a74.14 74.14 0 0017.46-5.77.78.78 0 00.42-.52c1.33-6.6 3.31-14.81 4.5-21.51 0-2.83-4.14-5.27-10.38-7A95.32 95.32 0 0034.5 2.48zM3 3.05a1.53 1.53 0 101.5 1.53A1.51 1.51 0 003 3.05zm63 0a1.53 1.53 0 101.5 1.53A1.51 1.51 0 0066 3.05zm-31.5.55a92.5 92.5 0 0123.2 2.62C63.58 7.83 67 10 67 12.2c0 1.31-1.16 2.57-3.3 3.72a36 36 0 00-12.17-5.36 83 83 0 00-17-1.5 81.35 81.35 0 00-17 1.81c-5 1.15-9.21 2.84-11.83 5.22C3.31 14.9 2 13.57 2 12.2c0-2.22 3.38-4.37 9.26-6A92.5 92.5 0 0134.5 3.6zm0 7A82.13 82.13 0 0151.21 12 34.22 34.22 0 0162 16.68 34.61 34.61 0 0158.24 18c-5-3-14.35-4.27-23.74-4.27S15.78 15 10.76 18a36.46 36.46 0 01-3.59-1.22c2.35-1.87 6.11-3.39 10.64-4.43a79.85 79.85 0 0116.69-1.77zm0 4.67c8.32 0 16.66 1.21 21.49 3.34a96.15 96.15 0 01-21.49 2.17A96.15 96.15 0 0113 18.59c4.84-2.13 13.18-3.34 21.5-3.34zm-7.24 13H43.2l2.46 2.29H24.77zM24.89 32h20.67l-2 11.44h-16.7z\" /></svg>;\n\nexport default SvgVenueIcon;","import React, { lazy, Suspense } from \"react\";\nimport { Layout, Menu } from \"antd\";\nimport Icon from \"@ant-design/icons\";\nimport BatIcon from \"./Icons/bat-icon.svg\";\nimport BowlIcon from \"./Icons/bowl-icon.svg\";\nimport VenueIcon from \"./Icons/venue-icon.svg\";\nimport \"./App.scss\";\nconst BattingStats = lazy(() => import(\"./Components/BattingStats\"));\nconst BowlingStats = lazy(() => import(\"./Components/BowlingStats\"));\nconst VenueStats = lazy(() => import(\"./Components/VenueStats\"));\n\nconst iconPath = process.env.PUBLIC_URL + \"/assets/\";\nconst { Content, Sider } = Layout;\nconst windowWidth = window.innerWidth;\n\nclass App extends React.Component {\n  state = {\n    collapsed: windowWidth > 1024 ? false : true,\n    tab: \"1\",\n  };\n\n  onCollapse = (collapsed) => {\n    this.setState({ collapsed });\n  };\n\n  onTabChange = (event) => {\n    this.setState({ tab: event.key });\n  };\n\n  render() {\n    const { collapsed, tab } = this.state;\n    return (\n      <Layout className=\"dashboard-layout\">\n        <Sider collapsible collapsed={collapsed} onCollapse={this.onCollapse}>\n          <div className={collapsed === true ? \"logo-collapsed\" : \"logo\"}>\n            {collapsed === true ? (\n              <img src={`${iconPath}logo.svg`} alt=\"Logo\" />\n            ) : (\n              <img src={`${iconPath}full-logo.svg`} alt=\"Logo\" />\n            )}\n          </div>\n          <Menu\n            defaultSelectedKeys={[tab]}\n            mode=\"inline\"\n            className=\"nav-menu\"\n            onClick={this.onTabChange}\n          >\n            <Menu.Item\n              key=\"1\"\n              icon={\n                <Icon\n                  component={BatIcon}\n                  className={tab === \"1\" ? \"svg-focus\" : \"\"}\n                />\n              }\n            >\n              Batting\n            </Menu.Item>\n            <Menu.Item\n              key=\"2\"\n              icon={\n                <Icon\n                  component={BowlIcon}\n                  className={tab === \"2\" ? \"svg-focus\" : \"\"}\n                />\n              }\n            >\n              Bowling\n            </Menu.Item>\n            <Menu.Item\n              key=\"3\"\n              icon={\n                <Icon\n                  component={VenueIcon}\n                  className={tab === \"3\" ? \"svg-focus\" : \"\"}\n                />\n              }\n            >\n              Venue\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout className=\"site-layout\">\n          <Content className=\"site-layout-container\">\n            <Suspense fallback={<div>Loading...</div>}>\n              <div className=\"site-layout-background\">\n                {this.state.tab === \"1\" ? (\n                  <BattingStats />\n                ) : this.state.tab === \"2\" ? (\n                  <BowlingStats />\n                ) : (\n                  <VenueStats />\n                )}\n              </div>\n            </Suspense>\n          </Content>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}